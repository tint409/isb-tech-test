// <auto-generated />
using System;
using ISBTest.DAL.DataProviders;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ISBTest.DAL.Migrations
{
    [DbContext(typeof(ISBTestDbContext))]
    [Migration("20240707102957_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ISBTest.DAL.Entities.Contact", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contact");

                    b.HasData(
                        new
                        {
                            Id = new Guid("639812a1-ad91-44ac-946b-c9c0ad0fc908"),
                            CreatedAt = new DateTime(2024, 7, 7, 10, 29, 57, 356, DateTimeKind.Utc).AddTicks(4070),
                            FirstName = "Carmen",
                            LastName = "Attard",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3714dabc-2e57-43e3-8eb1-89a0a78ed02f"),
                            CreatedAt = new DateTime(2024, 7, 7, 10, 29, 57, 356, DateTimeKind.Utc).AddTicks(4072),
                            FirstName = "Joshua",
                            LastName = "Mifsud",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2370b0cc-d432-4608-9ce4-922017f9ee8e"),
                            CreatedAt = new DateTime(2024, 7, 7, 10, 29, 57, 356, DateTimeKind.Utc).AddTicks(4073),
                            FirstName = "Joe",
                            LastName = "Borg",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ISBTest.DAL.Entities.OwnershipChange", b =>
                {
                    b.Property<Guid>("PropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AskingPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoldPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoldPriceAtUsd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PropertyId", "EffectiveDate");

                    b.HasIndex("ContactId");

                    b.ToTable("OwnershipChange");

                    b.HasData(
                        new
                        {
                            PropertyId = new Guid("872a1a41-cb52-4db9-ac88-4e04ddb5e67d"),
                            EffectiveDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AskingPrice = "EUR 130000.00",
                            ContactId = new Guid("639812a1-ad91-44ac-946b-c9c0ad0fc908"),
                            SoldPrice = "EUR 120000.00",
                            SoldPriceAtUsd = "USD 140000.00"
                        },
                        new
                        {
                            PropertyId = new Guid("872a1a41-cb52-4db9-ac88-4e04ddb5e67d"),
                            EffectiveDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AskingPrice = "EUR 150000.00",
                            ContactId = new Guid("3714dabc-2e57-43e3-8eb1-89a0a78ed02f"),
                            SoldPrice = "EUR 140000.00",
                            SoldPriceAtUsd = "USD 165000.00"
                        });
                });

            modelBuilder.Entity("ISBTest.DAL.Entities.Property", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Property");

                    b.HasData(
                        new
                        {
                            Id = new Guid("872a1a41-cb52-4db9-ac88-4e04ddb5e67d"),
                            Address = "Hcm Maisonette Address",
                            CreatedAt = new DateTime(2024, 7, 7, 10, 29, 57, 356, DateTimeKind.Utc).AddTicks(3987),
                            DateOfRegistration = new DateTime(2024, 7, 7, 10, 29, 57, 356, DateTimeKind.Utc).AddTicks(3989),
                            Name = "Hcm Maisonette",
                            Price = "EUR 130000.00",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bf987682-1335-4ecb-808d-51c6bf3a7ed3"),
                            Address = "Cantho Maisonette Address",
                            CreatedAt = new DateTime(2024, 7, 7, 10, 29, 57, 356, DateTimeKind.Utc).AddTicks(3991),
                            DateOfRegistration = new DateTime(2024, 7, 7, 10, 29, 57, 356, DateTimeKind.Utc).AddTicks(3992),
                            Name = "Cantho Maisonette",
                            Price = "EUR 110000.00",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b456b0aa-57cf-4d84-82e9-6347c3c6dcf1"),
                            Address = "Penhouse",
                            CreatedAt = new DateTime(2024, 7, 7, 10, 29, 57, 356, DateTimeKind.Utc).AddTicks(3994),
                            DateOfRegistration = new DateTime(2024, 7, 7, 10, 29, 57, 356, DateTimeKind.Utc).AddTicks(3994),
                            Name = "Penhouse",
                            Price = "EUR 430000.00",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ISBTest.DAL.Entities.OwnershipChange", b =>
                {
                    b.HasOne("ISBTest.DAL.Entities.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ISBTest.DAL.Entities.Property", "Property")
                        .WithMany("OwnershipChanges")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("ISBTest.DAL.Entities.Property", b =>
                {
                    b.Navigation("OwnershipChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
